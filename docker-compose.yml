services:
  dragonfly-appointment:
    restart: unless-stopped
    image: ghcr.io/dragonflydb/dragonfly:latest
    container_name: dragonfly-appointments
    ports:
      - "6379:6379"
    networks:
      - backend-appointments
    volumes:
      - dragonfly-data:/data/dragonfly

  mongodb-appointment:
    restart: unless-stopped
    image: mongo:latest
    container_name: mongodb-appointments
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGOADMIN}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGOPASS}
    networks:
      - backend-appointments
    ports:
      - "27017:27017"
    volumes:
      - mongo-data-appointments:/data/db

  appointment:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    container_name: appointment
    environment:
      - PORT=3012
      - MONGOADMIN=${MONGOADMIN}
      - MONGOPASS=${MONGOPASS}
      - MONGOURL=${MONGOURL}
      - NODE_ENV=production
      - RABBIT_USERNAME=${RABBIT_USERNAME}
      - RABBIT_PASSWORD=${RABBIT_PASSWORD}
      - RABBIT_HOST=${RABBIT_HOST}
      - RABBIT_PORT=${RABBIT_PORT}
      - RABBIT_VHOST=${RABBIT_VHOST}
      - API_PREFIX=/api/v1
      - JWT_SECRET=${JWT_SECRET}
      - KAFKA_HOST=${KAFKA_HOST}
      - DRAGONFLY_HOST=${DRAGONFLY_HOST}
      - DRAGONFLY_PORT=${DRAGONFLY_PORT}
    depends_on:
      - mongodb
    networks:
      - backend-appointments
    ports:
      - "3012:3012"

  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_PASSWORD}
    networks:
      - backend-appointments
      - rabbit-network
    ports:
      - "5672:5672"

volumes:
  mongo-data-appointments:
  dragonfly-data:

networks:
  backend-appointments:
    driver: bridge
  rabbit-network:
    external: true
